generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// ============================================
// 用户管理
// ============================================
model User {
  id              Int       @id @default(autoincrement())
  walletAddress   String    @unique @map("wallet_address")
  username        String?
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  // 用户创建的主题
  topics          Topic[]
  
  @@index([walletAddress])
  @@map("users")
}

// ============================================
// 主题管理（用户手动创建 + 自动生成）
// ============================================
model Topic {
  id              Int       @id @default(autoincrement())
  name            String
  description     String?
  userId          Int        @map("user_id")  // 兼容现有数据库
  order           Int        @default(0)  // 排序顺序
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  // 关联
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokens          TopicToken[]
  
  @@index([userId])
  @@index([order])
  @@map("topics")
}


// ============================================
// 主题-代币关联表
// ============================================
model TopicToken {
  id              Int       @id @default(autoincrement())
  topicId         Int       @map("topic_id")
  tokenId         Int       @map("token_id")
  addedAt         DateTime  @default(now()) @map("added_at")
  
  // 关联
  topic           Topic     @relation(fields: [topicId], references: [id], onDelete: Cascade)
  token           Token     @relation(fields: [tokenId], references: [id], onDelete: Cascade)
  
  @@unique([topicId, tokenId])
  @@index([topicId])
  @@index([tokenId])
  @@map("topic_tokens")
}

// ============================================
// 代币信息
// ============================================
model Token {
  id              Int       @id @default(autoincrement())
  mintAddress     String    @unique @map("mint_address")
  name            String
  symbol          String
  decimals        Int       @default(9)
  logoUri         String?   @map("logo_uri")
  description     String?
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  // 关联
  topicTokens     TopicToken[]
  marketData      TokenMarketData[]
  
  @@index([mintAddress])
  @@index([symbol])
  @@map("tokens")
}

// ============================================
// 代币市场数据
// ============================================
model TokenMarketData {
  id                  Int       @id @default(autoincrement())
  tokenId             Int       @map("token_id")
  price               Float?
  priceChange24h      Float?    @map("price_change_24h")
  marketCap           Float?    @map("market_cap")
  volume24h           Float?    @map("volume_24h")
  liquidity           Float?
  holderCount         Int?      @map("holder_count")
  transactionCount24h Int?     @map("transaction_count_24h")
  fdv                 Float?
  timestamp           DateTime  @default(now())
  
  token               Token     @relation(fields: [tokenId], references: [id], onDelete: Cascade)

  @@index([tokenId])
  @@index([timestamp])
  @@map("token_market_data")
}

